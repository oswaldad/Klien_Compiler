The Cobras - Drake Oswald, Reed Christensen, Caiden Hauser

This project is the creation of a compiler for the simple language, Klein.  So far, the 
scanner has been implemented in tendem with the first section of the parser. As of now, the 
parser regonizes if a given program is syntactically correct.

Src:
	Our files consist of...
		Scanner.py - This file contains the code to produce a list of tokens, 
			including the functions next() and peek().

		TokenKlein.py - This file creates a token class which we use to store what 
			type of token one is and its value (if necessary).

		Parser.py - This file contains code that checks the syntax of the 
			list of tokens that is produced in scanner

Implemented for this Step:
		We created the a parser that takes checks if a klein is legal, syntactically.
		In doing so, it expands upon each token by using a parsing table. The next
		step will be to expand this parser to create an abstract syntax tree.

To run the Parser:
	Navigate in the command line to the main directory.

	Type: chmod +x klienf

	To run klien: ./kliens /programs/(path_of_file)


This compiler has no KNOWN bugs at the moment. 

This compiler supports the full Klein language.

Optimizations are inapplicable at this time.
